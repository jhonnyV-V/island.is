{
  "openapi": "3.0.1",
  "info": {
    "title": "Digital DrivingLicenceBook API",
    "description": "Vefþjónusta fyrir rafræna ökunámsbók - f9a51338fc6bb51bf829cfc1123ddd104a8439cd-20240530.1",
    "contact": {
      "name": "Samgöngustofa",
      "url": "https://www.samgongustofa.is/",
      "email": "samgongustofa@samgongustofa.is"
    },
    "version": "v1",
    "x-category": ["personal", "official"],
    "x-pricing": ["free", "paid"],
    "x-links": [
      ["documentation", "https://www.samgongustofa.is/"],
      ["responsibleParty", "mailto:samgongustofa@samgongustofa.is"],
      ["bugReport", "https://www.samgongustofa.is/"],
      ["featureRequest", "https://www.samgongustofa.is/"]
    ]
  },
  "servers": [{ "url": "/DLB" }],
  "paths": {
    "/api/Authentication/Authenticate": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/DLB/GetLicenseCategories": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseCategoryGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/GetSchoolTypes": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolTypeGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/GetSchoolTestResults/{bookId}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "id", "in": "query", "schema": { "type": "string" } },
          {
            "name": "showInactive",
            "in": "query",
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolTestResultsGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/GetSchoolTestResult/{id}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolTestResultGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/CreateSchoolTestResult": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolTestResultCreateRequestBody",
                "description": "Represents the request body for creating a school test result."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolTestResultCreateRequestBody",
                "description": "Represents the request body for creating a school test result."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolTestResultCreateRequestBody",
                "description": "Represents the request body for creating a school test result."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolTestResultCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/UpdateSchoolTestResult/{id}": {
      "put": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolTestResultUpdateRequestBody",
                "description": "Represents the request body for updating a school test result."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolTestResultUpdateRequestBody",
                "description": "Represents the request body for updating a school test result."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolTestResultUpdateRequestBody",
                "description": "Represents the request body for updating a school test result."
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/DeleteSchoolTestResult/{id}": {
      "delete": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "reason", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/School/GetSchoolForSchoolStaff/{userSsn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "userSsn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetStudentList": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          { "name": "key", "in": "query", "schema": { "type": "string" } },
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          },
          { "name": "cursor", "in": "query", "schema": { "type": "string" } },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentListGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/CreateLicenseBook": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBookCreateRequestBody",
                "description": "Represents the request body for creating a digital driving license book."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBookCreateRequestBody",
                "description": "Represents the request body for creating a digital driving license book."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBookCreateRequestBody",
                "description": "Represents the request body for creating a digital driving license book."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalBookCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetStudentActiveBookId/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "licenseCategory",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "includeCompleted",
            "in": "query",
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentBookIdGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetStudentOverview/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "showInactiveBooks",
            "in": "query",
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentOverviewGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetStudentDrivingSchoolProgress/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "licenseCategory",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentDrivingSchoolProgress"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/CanStartDrivingSchoolThree/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanStartDrivingSchoolThree"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetLicenseBookList/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalBookListGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetLicenseBook/{id}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalBookGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/GetStudentActiveLicenseBookBySsn/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string", "default": "B" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalBookGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/UpdateLicenseBook/{id}": {
      "put": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBookUpdateRequestBody",
                "description": "Represents the request body for updating a digital driving license book."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBookUpdateRequestBody",
                "description": "Represents the request body for updating a digital driving license book."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBookUpdateRequestBody",
                "description": "Represents the request body for updating a digital driving license book."
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Student/DeleteLicenseBook/{id}": {
      "delete": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "reason", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/GetPracticalDrivingLessons/{bookId}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "id", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticalDrivingLessonGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/GetTeacher/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherDetailsGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/GetStudentOverviewForTeacher/{teacherSsn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "teacherSsn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          },
          { "name": "cursor", "in": "query", "schema": { "type": "string" } },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "showExpired",
            "in": "query",
            "schema": { "type": "boolean", "default": true }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStudentOverviewForTeacherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/GetStudentsForTeacher/{teacherSsn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "teacherSsn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          },
          { "name": "cursor", "in": "query", "schema": { "type": "string" } },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "showInactive",
            "in": "query",
            "schema": { "type": "boolean", "default": true }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStudentsForTeacherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/CreatePracticalDrivingLesson": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PracticalDrivingLessonCreateRequestBody",
                "description": "Represents the request body for creating a practical driving lesson."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PracticalDrivingLessonCreateRequestBody",
                "description": "Represents the request body for creating a practical driving lesson."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PracticalDrivingLessonCreateRequestBody",
                "description": "Represents the request body for creating a practical driving lesson."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticalDrivingLessonCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/UpdatePracticalDrivingLesson/{id}": {
      "put": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PracticalDrivingLessonUpdateRequestBody",
                "description": "Represents the request body for updating a practical driving lesson."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PracticalDrivingLessonUpdateRequestBody",
                "description": "Represents the request body for updating a practical driving lesson."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PracticalDrivingLessonUpdateRequestBody",
                "description": "Represents the request body for updating a practical driving lesson."
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/CreateAllowedPracticeDriving": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAllowedPractieDrivingRequestBody",
                "description": "Represents the request body for creating permission for practice driving for a student."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAllowedPractieDrivingRequestBody",
                "description": "Represents the request body for creating permission for practice driving for a student."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAllowedPractieDrivingRequestBody",
                "description": "Represents the request body for creating permission for practice driving for a student."
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/DeleteAllowedPracticeDriving": {
      "delete": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          { "name": "ssn", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/CanAllowStudentToPracticeDriving/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/DeletePracticalDrivingLesson/{id}": {
      "delete": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "reason", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/GetExemptionTypes": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExemptionTypeGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/GetExemption": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          { "name": "bookId", "in": "query", "schema": { "type": "string" } },
          {
            "name": "teacherSsn",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "exemptionTypeId",
            "in": "query",
            "schema": { "type": "integer", "format": "int32" }
          },
          { "name": "id", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExemptionsGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/CreateExemption": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExemptionCreateRequestBody",
                "description": "Represents the request body for creating an exemption."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExemptionCreateRequestBody",
                "description": "Represents the request body for creating an exemption."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExemptionCreateRequestBody",
                "description": "Represents the request body for creating an exemption."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExemptionCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/UpdateExemption/{id}": {
      "put": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExemptionUpdateRequestBody",
                "description": "Represents the request body for updating an exemption."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExemptionUpdateRequestBody",
                "description": "Represents the request body for updating an exemption."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExemptionUpdateRequestBody",
                "description": "Represents the request body for updating an exemption."
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/Teacher/DeleteExemption/{id}": {
      "delete": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "reason", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/GetTestTypes": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TestTypeGetResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/GetTest/{testTypeId}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "testTypeId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TestGetResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/GetTestExamRights/{ssn}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "ssn",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "testTypeId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestExamRightsGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/GetTestResult/{bookId}": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "testTypeId",
            "in": "query",
            "schema": { "type": "integer", "format": "int32" }
          },
          { "name": "id", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/CreateTestResult": {
      "post": {
        "tags": ["DrivingLicenseBook"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultCreateRequestBody",
                "description": "Represents the request body for creating a test result."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultCreateRequestBody",
                "description": "Represents the request body for creating a test result."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultCreateRequestBody",
                "description": "Represents the request body for creating a test result."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/UpdateTestResult/{id}": {
      "put": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultUpdateRequestBody",
                "description": "Represents the request body for updating test results."
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultUpdateRequestBody",
                "description": "Represents the request body for updating test results."
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultUpdateRequestBody",
                "description": "Represents the request body for updating test results."
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/DeleteTestResult/{id}": {
      "delete": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          { "name": "reason", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/GetDigitalBooks": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "showInactive",
            "in": "query",
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalBooksResponse"
                }
              }
            }
          },
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/TestCenter/StudentLicenseNumber": {
      "get": {
        "tags": ["DrivingLicenseBook"],
        "parameters": [
          { "name": "ssn", "in": "query", "schema": { "type": "string" } },
          {
            "name": "licenseCategory",
            "in": "query",
            "schema": { "type": "string", "default": "B" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStudentLicenseNumberResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActorStudent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "ssn": {
            "type": "string",
            "description": "Social security number",
            "nullable": true,
            "example": "0000000000"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Jón Jónsson"
          },
          "zipCode": {
            "type": "integer",
            "description": "Postcode",
            "format": "int32",
            "nullable": true,
            "example": 101
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true,
            "example": "Borgartúni 1"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "nafn@postur.is"
          },
          "primaryPhoneNumber": {
            "type": "string",
            "description": "Primary phone number",
            "nullable": true,
            "example": "8888888"
          },
          "secondaryPhoneNumber": {
            "type": "string",
            "description": "Secondary phone number",
            "nullable": true,
            "example": "5555555"
          },
          "active": {
            "type": "boolean",
            "description": "Is actor active",
            "example": true
          },
          "bookLicenseCategories": {
            "type": "array",
            "items": { "type": "string" },
            "description": "List of license categories associated with the books owned by the student",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for Actor information specific to students"
      },
      "ActorTeacher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "ssn": {
            "type": "string",
            "description": "Social security number",
            "nullable": true,
            "example": "0000000000"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Jón Jónsson"
          },
          "zipCode": {
            "type": "integer",
            "description": "Postcode",
            "format": "int32",
            "nullable": true,
            "example": 101
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true,
            "example": "Borgartúni 1"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "nafn@postur.is"
          },
          "primaryPhoneNumber": {
            "type": "string",
            "description": "Primary phone number",
            "nullable": true,
            "example": "8888888"
          },
          "secondaryPhoneNumber": {
            "type": "string",
            "description": "Secondary phone number",
            "nullable": true,
            "example": "5555555"
          },
          "active": {
            "type": "boolean",
            "description": "Is actor active",
            "example": true
          },
          "hasRegisteredDrivingLessons": {
            "type": "boolean",
            "description": "Indicates whether the teacher has registered driving lessons."
          },
          "credentials": {
            "type": "array",
            "items": { "type": "string" },
            "description": "A list of credentials associated with the teacher.",
            "nullable": true,
            "example": ["B", "BE", "C", "C1", "C1E"]
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for Actor information specific to teachers.\r\nThis class extends the Actor base class with additional properties relevant to teachers, such as their registered driving lessons status and credentials."
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for a driving license book",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "studentSSN": {
            "type": "string",
            "description": "Social security number of the student",
            "nullable": true
          },
          "dateOfApplication": {
            "type": "string",
            "description": "Registration date",
            "format": "date-time"
          },
          "licenseCategory": {
            "type": "string",
            "description": "License category",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "description": "Status id of the application (0=New, 1=In Progress, 2=Finished, 3=Rejected, 9=Canceled)",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "description": "Name of the book status",
            "nullable": true,
            "example": "Nýtt"
          },
          "postCode": {
            "type": "integer",
            "description": "Student's postcode",
            "format": "int32"
          },
          "teacherSSN": {
            "type": "string",
            "description": "Teacher's social security number",
            "nullable": true
          },
          "schoolSSN": {
            "type": "string",
            "description": "School's social security number",
            "nullable": true
          },
          "applicationNumber": {
            "type": "string",
            "description": "Application Number",
            "format": "uuid",
            "nullable": true
          },
          "licenseNumber": {
            "type": "integer",
            "description": "Driver license number",
            "format": "int32",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "description": "Datetime when the book was last modified",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for driving license book applications"
      },
      "AuthenticateModel": {
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "username": { "minLength": 1, "type": "string" },
          "password": { "minLength": 1, "type": "string" }
        },
        "additionalProperties": false
      },
      "AuthenticateResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Gets or sets the bearer token for authorization.",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySUQiOiJzdHJpbmciLCJyb2xlIjoiU0VDX0lOU1BFQ1RJT05fUkVBRCIsIm5iZiI6MTYzMjEzODM1MiwiZXhwIjoxNjMyMTQxOTUyLCJpYXQiOjE2MzIxMzgzNTJ9.JGLi5ZUXfmmHfYbe_ckMTslEkow_ul6n0WZhrz8QCeA"
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing a bearer token for authorization."
      },
      "BookOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the driving license book.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "description": "Gets or sets the date the driving license book was registered (yyyy-MM-dd).",
            "nullable": true
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the driving instructor.",
            "nullable": true
          },
          "teacherName": {
            "type": "string",
            "description": "Gets or sets the name of the driving instructor.",
            "nullable": true
          },
          "schoolSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the driving school.",
            "nullable": true
          },
          "schoolName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school.",
            "nullable": true
          },
          "isDigital": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the driving license book is digital or not (else on paper)."
          },
          "status": {
            "type": "integer",
            "description": "Gets or sets the status ID of the application (0=New, 1=In Progress, etc.).",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "description": "Gets or sets the name of the book status.",
            "nullable": true
          },
          "practiceDriving": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the student can do practice driving."
          },
          "totalLessonCount": {
            "type": "number",
            "description": "Gets the count of all practical lessons (each lesson is 45 minutes).",
            "format": "double",
            "readOnly": true
          },
          "teachersAndLessons": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Lesson" },
            "description": "Gets or sets the list of all practical lessons with instructors.",
            "nullable": true
          },
          "drivingSchoolExams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DrivingSchoolExam" },
            "description": "Gets or sets the list of all driving school tests, grouped by school.",
            "nullable": true
          },
          "testResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrivingLicenceTestResult"
            },
            "description": "Gets or sets the results from test center.",
            "nullable": true
          },
          "exemptions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Exemption" },
            "description": "Gets or sets the list of all exemptions for the book.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides an overview of a driving license book."
      },
      "CanStartDrivingSchoolThree": {
        "type": "object",
        "properties": {
          "response": {
            "type": "boolean",
            "description": "Gets or sets whether the student can start driving school 3 based on progress and exemption."
          },
          "reasons": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Reason" },
            "description": "Gets or sets the reasons why the student cannot start driving school 3.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains a response indicating whether a student can start driving school 3 and the reasons if they cannot."
      },
      "CreateAllowedPractieDrivingRequestBody": {
        "required": ["studentSsn", "teacherSsn"],
        "type": "object",
        "properties": {
          "teacherSsn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the ID of the teacher granting permission."
          },
          "studentSsn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the ID of the student receiving practice driving permission."
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for creating permission for practice driving for a student."
      },
      "DigitalBook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the digital driving license book.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "description": "Gets or sets the date when the digital book was registered (yyyy-MM-dd).",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "Gets or sets the status ID of the application (0=New, 1=In Progress, ...).",
            "format": "int32"
          },
          "isExpired": {
            "type": "boolean",
            "description": "Gets or sets whether the application is expired."
          },
          "statusName": {
            "type": "string",
            "description": "Gets or sets the status name of the application.",
            "nullable": true
          },
          "studentId": {
            "type": "string",
            "description": "Gets or sets the actorId for student",
            "nullable": true
          },
          "studentSsn": {
            "type": "string",
            "description": "Gets or sets the student's social security number.",
            "nullable": true
          },
          "studentName": {
            "type": "string",
            "description": "Gets or sets the name of the student.",
            "nullable": true
          },
          "studentZipCode": {
            "type": "integer",
            "description": "Gets or sets the student's postcode.",
            "format": "int32",
            "nullable": true
          },
          "studentAddress": {
            "type": "string",
            "description": "Gets or sets the student's address.",
            "nullable": true
          },
          "studentEmail": {
            "type": "string",
            "description": "Gets or sets the student's email.",
            "nullable": true
          },
          "studentPrimaryPhoneNumber": {
            "type": "string",
            "description": "Gets or sets the student's primary phone number.",
            "nullable": true
          },
          "studentSecondaryPhoneNumber": {
            "type": "string",
            "description": "Gets or sets the student's secondary phone number.",
            "nullable": true
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the driving instructor's social security number.",
            "nullable": true
          },
          "teacherName": {
            "type": "string",
            "description": "Gets or sets the name of the driving instructor.",
            "nullable": true
          },
          "schoolSsn": {
            "type": "string",
            "description": "Gets or sets the driving school's social security number.",
            "nullable": true
          },
          "schoolName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school.",
            "nullable": true
          },
          "isDigital": {
            "type": "boolean",
            "description": "Gets or sets whether the driving license book is digital or not (else on paper)."
          },
          "applicationNumber": {
            "type": "string",
            "description": "Gets or sets the application number.",
            "format": "uuid",
            "nullable": true
          },
          "licenseNumber": {
            "type": "integer",
            "description": "Gets or sets the license number.",
            "format": "int32",
            "nullable": true
          },
          "licenseOrdered": {
            "type": "string",
            "description": "Gets or sets when the driving license was ordered from RLS.",
            "nullable": true
          },
          "practiceDriving": {
            "type": "boolean",
            "description": "Gets or sets whether the student can do practice driving."
          },
          "practiceDrivingGranted": {
            "type": "string",
            "description": "Gets or sets when practice driving was granted on the driving license digital book.",
            "format": "date-time",
            "nullable": true
          },
          "practiceDrivingExpires": {
            "type": "string",
            "description": "Gets or sets when practice driving expires on the driving license digital book.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a digital driving license book data transfer object."
      },
      "DigitalBookCreateRequestBody": {
        "required": ["createdOn", "licenseCategory", "studentSsn"],
        "type": "object",
        "properties": {
          "licenseCategory": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "example": "B"
          },
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date when the book is registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "applicationNumber": {
            "type": "string",
            "description": "Gets or sets the student's application number.",
            "format": "uuid",
            "nullable": true
          },
          "drivingLicenseNumber": {
            "type": "integer",
            "description": "Gets or sets the student's driving license number",
            "format": "int32",
            "nullable": true
          },
          "studentSsn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the student's social security number.",
            "example": "0000000000"
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the driving instructor's social security number.",
            "nullable": true,
            "example": "0000000000"
          },
          "schoolSsn": {
            "type": "string",
            "description": "Gets or sets the driving school's social security number.",
            "nullable": true,
            "example": "0000000000"
          },
          "studentEmail": {
            "type": "string",
            "description": "Gets or sets the student's email.",
            "nullable": true,
            "example": "nafn@postur.is"
          },
          "studentPrimaryPhoneNumber": {
            "type": "string",
            "description": "Gets or sets the student's primary phone number.",
            "nullable": true,
            "example": "8888888"
          },
          "studentSecondaryPhoneNumber": {
            "type": "string",
            "description": "Gets or sets the student's secondary phone number.",
            "nullable": true,
            "example": "5555555"
          },
          "isDigital": {
            "type": "boolean",
            "description": "Gets or sets whether the driving license book is digital or on paper.",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for creating a digital driving license book."
      },
      "DigitalBookCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DigitalBookCreateResponseData",
            "description": "Gets or sets the data for the created digital driving license book.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for creating a digital driving license book."
      },
      "DigitalBookCreateResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique id for the created driving license book.",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          }
        },
        "additionalProperties": false,
        "description": "Represents the data for the created digital driving license book."
      },
      "DigitalBookGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DigitalBook",
            "description": "Gets or sets the data for the digital driving license book.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for getting a digital driving license book."
      },
      "DigitalBookListGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DigitalBook" },
            "description": "Gets or sets the list of digital driving license books.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for getting a list of digital driving license books."
      },
      "DigitalBookUpdateRequestBody": {
        "required": ["createdOn"],
        "type": "object",
        "properties": {
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date of registration (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the driving instructor.",
            "nullable": true,
            "example": "0000000000"
          },
          "schoolSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the driving school.",
            "nullable": true,
            "example": "0000000000"
          },
          "studentEmail": {
            "type": "string",
            "description": "Gets or sets the email of the student.",
            "nullable": true,
            "example": "nafn@postur.is"
          },
          "studentPrimaryPhoneNumber": {
            "type": "string",
            "description": "Gets or sets the primary phone number of the student.",
            "nullable": true,
            "example": "8888888"
          },
          "studentSecondaryPhoneNumber": {
            "type": "string",
            "description": "Gets or sets the secondary phone number of the student.",
            "nullable": true,
            "example": "5555555"
          },
          "practiceDriving": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the student can do practice driving."
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for updating a digital driving license book."
      },
      "DigitalBooksResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Application" },
            "description": "Gets or sets the list of digital books.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing a list of digital books."
      },
      "DrivingLicenceTestResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for test result",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "examDate": {
            "type": "string",
            "description": "Date of test (yyyy-MM-dd)",
            "nullable": true,
            "example": "2020-01-01"
          },
          "score": {
            "type": "integer",
            "description": "Test results",
            "format": "int32",
            "example": 100
          },
          "scorePart1": {
            "type": "integer",
            "description": "How many points did student get in part 1 (applies to written test)",
            "format": "int32",
            "nullable": true,
            "example": 45
          },
          "scorePart2": {
            "type": "integer",
            "description": "How many points did student get in part 2 (applies to written test)",
            "format": "int32",
            "nullable": true,
            "example": 45
          },
          "hasPassed": {
            "type": "boolean",
            "description": "Whether student passed the test",
            "example": true
          },
          "testCenterSsn": {
            "type": "string",
            "description": "Test center social security number",
            "nullable": true,
            "example": "0000000000"
          },
          "testCenterName": {
            "type": "string",
            "description": "Name of test center",
            "nullable": true,
            "example": "Jón Jónsson"
          },
          "testExaminerSsn": {
            "type": "string",
            "description": "Test examiner social security number",
            "nullable": true,
            "example": "0000000000"
          },
          "testExaminerName": {
            "type": "string",
            "description": "Name of test examiner",
            "nullable": true,
            "example": "Jón Jónsson"
          },
          "testTypeId": {
            "type": "integer",
            "description": "Type of test (1, 2, 3)",
            "format": "int32",
            "example": 1
          },
          "testTypeName": {
            "type": "string",
            "description": "Name of test",
            "nullable": true,
            "example": "Skriflegt próf"
          },
          "testTypeCode": {
            "type": "string",
            "description": "Code for test type",
            "nullable": true,
            "example": "S"
          },
          "comments": {
            "type": "string",
            "description": "Comments about registration",
            "nullable": true,
            "example": "Texti með athugasemd"
          }
        },
        "additionalProperties": false,
        "description": "Information about test resulst for student"
      },
      "DrivingSchoolExam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the test result.",
            "nullable": true
          },
          "examDate": {
            "type": "string",
            "description": "Gets or sets the date of the exam in the format (yyyy-MM-dd).",
            "nullable": true
          },
          "schoolSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the driving school.",
            "nullable": true
          },
          "schoolName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school.",
            "nullable": true
          },
          "schoolEmployeeSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the driving school employee.",
            "nullable": true
          },
          "schoolEmployeeName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school employee.",
            "nullable": true
          },
          "schoolTypeId": {
            "type": "integer",
            "description": "Gets or sets the type of driving school (1, 2, 3).",
            "format": "int32"
          },
          "schoolTypeName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school type.",
            "nullable": true
          },
          "schoolTypeCode": {
            "type": "string",
            "description": "Gets or sets the code for the driving school type.",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "Gets or sets the status ID of the driving school exam (2 = Completed, 4 = Expired, 9 = Canceled).",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "description": "Gets or sets the status name of the driving school exam.",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the exam registration.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for a driving school exam."
      },
      "Exemption": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "Gets or sets the unique ID for the digital driving license book.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the exemption application.",
            "nullable": true
          },
          "exemptionTypeId": {
            "type": "integer",
            "description": "Gets or sets the exemption type ID.",
            "format": "int32"
          },
          "exemptionTypeName": {
            "type": "string",
            "description": "Gets or sets the name of the exemption type.",
            "nullable": true
          },
          "exemptionTypeDescription": {
            "type": "string",
            "description": "Gets or sets the description of the exemption type.",
            "nullable": true
          },
          "studentSsn": {
            "type": "string",
            "description": "Gets or sets the student's social security number.",
            "nullable": true
          },
          "studentName": {
            "type": "string",
            "description": "Gets or sets the name of the student.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the driving license category.",
            "nullable": true
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the driving instructor's social security number.",
            "nullable": true
          },
          "teacherName": {
            "type": "string",
            "description": "Gets or sets the name of the driving instructor.",
            "nullable": true
          },
          "reasonForApplication": {
            "type": "string",
            "description": "Gets or sets the reason for applying for exemption.",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "description": "Gets or sets the date when the exemption application was registered (yyyy-MM-dd).",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether the exemption is active."
          },
          "hasResult": {
            "type": "boolean",
            "description": "Gets or sets whether the application has a result (either approved or denied).",
            "nullable": true
          },
          "resultIsApproved": {
            "type": "boolean",
            "description": "Gets or sets whether the application for exemption has been approved or denied.",
            "nullable": true
          },
          "resultApprovedExpireDate": {
            "type": "string",
            "description": "Gets or sets the date when the approved exemption expires (yyyy-MM-dd), empty if the exemption never expires.",
            "nullable": true
          },
          "resultBySsn": {
            "type": "string",
            "description": "Gets or sets the social security number for the employee of SGS that approved/denied the application.",
            "nullable": true
          },
          "resultByName": {
            "type": "string",
            "description": "Gets or sets the name of the employee of SGS that approved/denied the application.",
            "nullable": true
          },
          "resultComments": {
            "type": "string",
            "description": "Gets or sets comments about the registration for approval/denial.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for exemptions."
      },
      "ExemptionCreateRequestBody": {
        "required": [
          "bookId",
          "createdOn",
          "exemptionTypeId",
          "reasonForApplication",
          "teacherSsn"
        ],
        "type": "object",
        "properties": {
          "bookId": {
            "minLength": 1,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Gets or sets the unique id for the digital driving license book.",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "teacherSsn": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string",
            "description": "Gets or sets the driving instructor's social security number.",
            "example": "0000000000"
          },
          "reasonForApplication": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the reason for applying for exemption.",
            "example": "Nemandinn er mjög klár"
          },
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date when the exemption is registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "exemptionTypeId": {
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the exemption type number.",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for creating an exemption."
      },
      "ExemptionCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExemptionCreateResponseData",
            "description": "Gets or sets the data related to the created exemption.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for creating an exemption."
      },
      "ExemptionCreateResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique id for the application.",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          }
        },
        "additionalProperties": false,
        "description": "Represents the data related to the created exemption in the response."
      },
      "ExemptionType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the type number for the exemption.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name for the exemption type.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description for the exemption type.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for exemption types."
      },
      "ExemptionTypeGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExemptionType" },
            "description": "Gets or sets the list of exemption types.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing a list of exemption types."
      },
      "ExemptionUpdateRequestBody": {
        "required": ["createdOn", "reasonForApplication"],
        "type": "object",
        "properties": {
          "reasonForApplication": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the reason for applying for exemption.",
            "example": "Nemandinn er mjög klár"
          },
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for updating an exemption."
      },
      "ExemptionsGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Exemption" },
            "description": "Gets or sets the list of exemption data.\r\nEach item in the list represents an individual exemption.",
            "nullable": true
          },
          "nextCursor": {
            "type": "string",
            "description": "Gets or sets the cursor for pagination.\r\nThis cursor can be used to fetch the next set of exemptions in subsequent requests.",
            "nullable": true,
            "example": "aWQ6MTAwNA=="
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for fetching a list of exemptions.\r\nThis includes a list of exemption data along with a pagination cursor."
      },
      "GetStudentLicenseNumberResponse": {
        "type": "object",
        "properties": {
          "ssn": { "type": "string", "nullable": true },
          "licenseid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categoriesOnLicense": { "type": "string", "nullable": true },
          "temporaryLicense": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "result": { "type": "integer", "format": "int32", "nullable": true },
          "errorCode": { "type": "string", "nullable": true }
        },
        "additionalProperties": false
      },
      "GetStudentOverviewForTeacherResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StudentShortOverview" },
            "description": "Gets or sets the list of short student overviews.",
            "nullable": true
          },
          "nextCursor": {
            "type": "string",
            "description": "Gets or sets the cursor for the next item that should be fetched.",
            "nullable": true,
            "example": "aWQ6MTAwNA=="
          }
        },
        "additionalProperties": false,
        "description": "Represents the response DTO used by teachers to get student overviews."
      },
      "GetStudentsForTeacherResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DigitalBook" },
            "description": "Gets or sets the list of digital driving license books associated with students.",
            "nullable": true
          },
          "nextCursor": {
            "type": "string",
            "description": "Gets or sets the cursor for the next item that should be fetched.",
            "nullable": true,
            "example": "aWQ6MTAwNA=="
          }
        },
        "additionalProperties": false,
        "description": "Represents the response DTO used by teachers to get a list of students."
      },
      "Lesson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the practical lesson.",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "description": "Gets or sets the date of the lesson in the format (yyyy-MM-dd).",
            "nullable": true
          },
          "lessonTime": {
            "type": "integer",
            "description": "Gets or sets the time duration of the lesson in minutes.",
            "format": "int32"
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the driving instructor's social security number.",
            "nullable": true
          },
          "teacherName": {
            "type": "string",
            "description": "Gets or sets the name of the driving instructor.",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the lesson registration.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for a practical driving lesson."
      },
      "LicenseCategory": {
        "type": "object",
        "properties": {
          "licenseCategoryCode": {
            "type": "string",
            "description": "Unique code for the license category",
            "nullable": true,
            "example": "B"
          },
          "licenseCategoryName": {
            "type": "string",
            "description": "Name of the license category",
            "nullable": true
          },
          "licenseCategoryDescription": {
            "type": "string",
            "description": "Description of the license category",
            "nullable": true
          },
          "minimumAge": {
            "type": "integer",
            "description": "Minimum age to be able to get the license in license category",
            "format": "int32",
            "example": 17
          },
          "active": {
            "type": "boolean",
            "description": "Value indicating whether the license category is active in the system",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "License category with related information."
      },
      "LicenseCategoryGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LicenseCategory" },
            "description": "List of license categories retrieved",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response structure for retrieving license categories"
      },
      "Organization": {
        "type": "object",
        "properties": {
          "ssn": {
            "type": "string",
            "description": "Gets or sets the Kennitala registered to the organization.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the organization.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Gets or sets the address of the organization.",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Gets or sets the zipcode of the organization's address.",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Gets or sets the organization's phone number.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the organization's email.",
            "nullable": true
          },
          "website": {
            "type": "string",
            "description": "Gets or sets the organization's website.",
            "nullable": true
          },
          "allowedDrivingSchoolTypes": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Gets or sets the driving school types this organization is allowed to register.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for an organization."
      },
      "PracticalDrivingLesson": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "Gets or sets the unique ID for the digital driving license book associated with the lesson.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the practical lesson.",
            "nullable": true
          },
          "studentSsn": {
            "type": "string",
            "description": "Gets or sets the student's social security number.",
            "nullable": true
          },
          "studentName": {
            "type": "string",
            "description": "Gets or sets the name of the student.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          },
          "teacherSsn": {
            "type": "string",
            "description": "Gets or sets the driving instructor's social security number.",
            "nullable": true
          },
          "teacherName": {
            "type": "string",
            "description": "Gets or sets the name of the driving instructor.",
            "nullable": true
          },
          "minutes": {
            "type": "integer",
            "description": "Gets or sets the amount of minutes in the practical lesson.",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "description": "Gets or sets the date when the lesson was registered (yyyy-MM-dd).",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the lesson.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for a practical driving lesson."
      },
      "PracticalDrivingLessonCreateRequestBody": {
        "required": ["bookId", "createdOn", "teacherSsn"],
        "type": "object",
        "properties": {
          "bookId": {
            "minLength": 1,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Gets or sets the unique ID for the digital driving license book.",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "teacherSsn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the social security number of the driving instructor.",
            "example": "0000000000"
          },
          "minutes": {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the duration of the practical driving lesson in minutes (min: 0, max: 1000).",
            "format": "int32",
            "example": 45
          },
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date when the lesson was registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets any additional comments about the registration.",
            "nullable": true,
            "example": "Texti með athugasemd"
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for creating a practical driving lesson."
      },
      "PracticalDrivingLessonCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PracticalDrivingLessonCreateResponseData",
            "description": "Gets or sets the data for the practical driving lesson creation response.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for creating a practical driving lesson."
      },
      "PracticalDrivingLessonCreateResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the practical driving lesson.",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          }
        },
        "additionalProperties": false,
        "description": "Represents the data for the response of creating a practical driving lesson."
      },
      "PracticalDrivingLessonGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PracticalDrivingLesson" },
            "description": "Gets or sets the list of practical driving lessons data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for retrieving practical driving lessons."
      },
      "PracticalDrivingLessonUpdateRequestBody": {
        "required": ["createdOn"],
        "type": "object",
        "properties": {
          "minutes": {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the practical driving lesson duration in minutes (min: 0, max: 1000).",
            "format": "int32",
            "example": 45
          },
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date when the practical driving lesson was registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets additional comments about the registration.",
            "nullable": true,
            "example": "Texti með athugasemd"
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for updating a practical driving lesson."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "nullable": true },
          "title": { "type": "string", "nullable": true },
          "status": { "type": "integer", "format": "int32", "nullable": true },
          "detail": { "type": "string", "nullable": true },
          "instance": { "type": "string", "nullable": true }
        },
        "additionalProperties": false
      },
      "Reason": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gets or sets the key associated with the reason.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message explaining the reason.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a reason for a student not being able to start driving school 3."
      },
      "SchoolTestResult": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "Gets or sets the unique ID for the digital driving license book associated with the result.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the unique ID for the test result.",
            "nullable": true
          },
          "studentSsn": {
            "type": "string",
            "description": "Gets or sets the student's social security number.",
            "nullable": true
          },
          "studentName": {
            "type": "string",
            "description": "Gets or sets the name of the student.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          },
          "schoolTypeId": {
            "type": "integer",
            "description": "Gets or sets the type of driving school (1, 2, 3).",
            "format": "int32"
          },
          "schoolTypeName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school type.",
            "nullable": true
          },
          "schoolTypeCode": {
            "type": "string",
            "description": "Gets or sets the code for the driving school type.",
            "nullable": true
          },
          "schoolSsn": {
            "type": "string",
            "description": "Gets or sets the driving school's social security number.",
            "nullable": true
          },
          "schoolName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school.",
            "nullable": true
          },
          "schoolEmployeeSsn": {
            "type": "string",
            "description": "Gets or sets the driving school employee's social security number.",
            "nullable": true
          },
          "schoolEmployeeName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school employee.",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "description": "Gets or sets the status id of the driving school test (2=Finished, 4=Expired, 9=Canceled).",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school test status.",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "description": "Gets or sets the date when the result was registered (yyyy-MM-dd).",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for a school test result."
      },
      "SchoolTestResultCreateRequestBody": {
        "required": [
          "bookId",
          "createdOn",
          "schoolEmployeeSsn",
          "schoolSsn",
          "schoolTypeId"
        ],
        "type": "object",
        "properties": {
          "bookId": {
            "minLength": 1,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Gets or sets the unique id for the digital driving license book.",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "schoolTypeId": {
            "type": "integer",
            "description": "Gets or sets the type of driving school (Ö1 = 1, Ö2 = 2, Ö3 = 3).",
            "format": "int32",
            "example": 1
          },
          "schoolSsn": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string",
            "description": "Gets or sets the social security number for the driving school.",
            "example": "0000000000"
          },
          "schoolEmployeeSsn": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string",
            "description": "Gets or sets the social security number for the driving school employee.",
            "example": "0000000000"
          },
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "comments": {
            "maxLength": 500,
            "type": "string",
            "description": "Gets or sets comments about the registered results.",
            "nullable": true,
            "example": "Text with comment"
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for creating a school test result."
      },
      "SchoolTestResultCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SchoolTestResultCreateResponseData",
            "description": "Gets or sets the data for the school test result creation response.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for creating a school test result."
      },
      "SchoolTestResultCreateResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique id for the test results.",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          }
        },
        "additionalProperties": false,
        "description": "Represents the data for the school test result creation response."
      },
      "SchoolTestResultGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SchoolTestResult",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SchoolTestResultType": {
        "type": "object",
        "properties": {
          "schoolTypeId": {
            "type": "integer",
            "description": "Gets or sets the type of driving school (1, 2, 3).",
            "format": "int32"
          },
          "schoolTypeName": {
            "type": "string",
            "description": "Gets or sets the name of the driving school type.",
            "nullable": true
          },
          "schoolTypeCode": {
            "type": "string",
            "description": "Gets or sets the code for the driving school type.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for a school test result type."
      },
      "SchoolTestResultUpdateRequestBody": {
        "required": ["createdOn"],
        "type": "object",
        "properties": {
          "createdOn": {
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "type": "string",
            "description": "Gets or sets the date when the test result was registered (yyyy-MM-dd).",
            "example": "2020-01-01"
          },
          "comments": {
            "maxLength": 500,
            "type": "string",
            "description": "Gets or sets comments about the registered results.",
            "nullable": true,
            "example": "Texti með athugasemd"
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for updating a school test result."
      },
      "SchoolTestResultsGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SchoolTestResult" },
            "description": "Gets or sets the list of school test results data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for retrieving school test results."
      },
      "SchoolTypeGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SchoolTestResultType" },
            "description": "Gets or sets the list of school test result types.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing a list of school test result types."
      },
      "StudentBookIdGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StudentBookIdGetResponseData",
            "description": "Gets or sets the data about the digital driving license book ID.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a response containing data about a student's digital driving license book ID."
      },
      "StudentBookIdGetResponseData": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "Gets or sets the unique ID for a digital driving license book.",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          }
        },
        "additionalProperties": false,
        "description": "Represents the data structure for a student's digital driving license book ID."
      },
      "StudentDrivingSchoolProgress": {
        "type": "object",
        "properties": {
          "ssn": {
            "type": "string",
            "description": "Ssn of student",
            "nullable": true
          },
          "bookId": {
            "type": "string",
            "description": "Students active bookid",
            "nullable": true
          },
          "drivingLessonMinutes": {
            "type": "number",
            "description": "Students driving lesson minutes",
            "format": "double",
            "nullable": true
          },
          "drivingLessonCount": {
            "type": "number",
            "description": "Students driving lesson count",
            "format": "double"
          },
          "isExemptedFromDrivingLessons": {
            "type": "boolean",
            "description": "If student is exempted from min driving lesson count"
          },
          "finishedDrivingSchool1": {
            "type": "boolean",
            "description": "Does the student have driving school 1 progress"
          },
          "finishedDrivingSchool2": {
            "type": "boolean",
            "description": "Does the student have driving school 2 progress"
          },
          "finishedDrivingSchool3": {
            "type": "boolean",
            "description": "Does the student have driving school 3 progress"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object containing info on students driving school and driving lessons progress"
      },
      "StudentListGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActorStudent" },
            "description": "Gets or sets the list of student data.",
            "nullable": true
          },
          "nextCursor": {
            "type": "string",
            "description": "Gets or sets the cursor for the next item that should be fetched.",
            "nullable": true,
            "example": "aWQ6MTAwNA=="
          }
        },
        "additionalProperties": false,
        "description": "Represents a response containing a list of student data."
      },
      "StudentOverView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "ssn": {
            "type": "string",
            "description": "Social security number",
            "nullable": true,
            "example": "0000000000"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Jón Jónsson"
          },
          "zipCode": {
            "type": "integer",
            "description": "Postcode",
            "format": "int32",
            "nullable": true,
            "example": 101
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true,
            "example": "Borgartúni 1"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "nafn@postur.is"
          },
          "primaryPhoneNumber": {
            "type": "string",
            "description": "Primary phone number",
            "nullable": true,
            "example": "8888888"
          },
          "secondaryPhoneNumber": {
            "type": "string",
            "description": "Secondary phone number",
            "nullable": true,
            "example": "5555555"
          },
          "active": {
            "type": "boolean",
            "description": "Is actor active",
            "example": true
          },
          "bookLicenseCategories": {
            "type": "array",
            "items": { "type": "string" },
            "description": "List of license categories associated with the books owned by the student",
            "nullable": true
          },
          "books": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BookOverview" },
            "description": "Gets or sets the list of student's driving license books.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Overview of a student, inherits ActorStudent and adds details about their driving license books."
      },
      "StudentOverviewGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StudentOverView",
            "description": "Gets or sets the overview data for a student.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a response containing an overview of student data."
      },
      "StudentShortOverview": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the student.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the student's driving license category.",
            "nullable": true
          },
          "ssn": {
            "type": "string",
            "description": "Gets or sets the student's Social Security Number.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the student.",
            "nullable": true
          },
          "totalLessonCount": {
            "type": "number",
            "description": "Gets or sets the total count of lessons the student has attended in each driving license category.\r\nThis is calculated based on the total lesson time in minutes and the duration of a standard lesson.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Provides a short overview of a student's details and their lesson progress."
      },
      "TeacherDetailsGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActorTeacher",
            "description": "Gets or sets the detailed information about the teacher.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for retrieving detailed information about a teacher in the admin system."
      },
      "TestExamRights": {
        "type": "object",
        "properties": {
          "hasExamRights": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the student has the rights to take the test."
          },
          "reasonKey": {
            "type": "string",
            "description": "Gets or sets the reason key if the student does not have rights.",
            "nullable": true
          },
          "reasonMessage": {
            "type": "string",
            "description": "Gets or sets the reason message if the student does not have rights.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the rights and reasons for a student's eligibility to take a test."
      },
      "TestExamRightsGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TestExamRights",
            "description": "Gets or sets the test exam rights data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing test exam rights information."
      },
      "TestFactor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the factor ID.",
            "nullable": true
          },
          "factor": {
            "type": "string",
            "description": "Gets or sets the factor name.",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "description": "Gets or sets the order number of the factor.",
            "format": "int32"
          },
          "cardNumber": {
            "type": "integer",
            "description": "Gets or sets the optional card number associated with the factor.",
            "format": "int32",
            "nullable": true
          },
          "scores": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestFactorScore" },
            "description": "Gets or sets the scores associated with the factor.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a factor associated with a test."
      },
      "TestFactorScore": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the ID of the score.",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "description": "Gets or sets the value of the score.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the score.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a score associated with a test factor."
      },
      "TestFactorScoreOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the ID of the score.",
            "nullable": true
          },
          "factor": {
            "type": "string",
            "description": "Gets or sets the name of the factor.",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "description": "Gets or sets the value of the score.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the score.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of a test factor score."
      },
      "TestGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TestOverview",
            "description": "Gets or sets the test overview data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for retrieving test information."
      },
      "TestOverview": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Gets or sets the title of the test.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the license category of the test.",
            "nullable": true
          },
          "testTypeId": {
            "type": "integer",
            "description": "Gets or sets the identifier for the type of the test.",
            "format": "int32"
          },
          "abbreviation": {
            "type": "string",
            "description": "Gets or sets the abbreviation commonly used for the test.",
            "nullable": true
          },
          "factors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestFactor" },
            "description": "Gets or sets the list of factors associated with the test.\r\nThese factors are criteria or components that are evaluated or assessed in the test.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an overview of a test."
      },
      "TestResult": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the digital driving license book.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the test result.",
            "nullable": true
          },
          "studentSsn": {
            "type": "string",
            "description": "Gets or sets the student's social security number.",
            "nullable": true
          },
          "studentName": {
            "type": "string",
            "description": "Gets or sets the student's name.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the type of driving license.",
            "nullable": true
          },
          "testTypeId": {
            "type": "integer",
            "description": "Gets or sets the type of test (1, 2, 3).",
            "format": "int32"
          },
          "testTypeName": {
            "type": "string",
            "description": "Gets or sets the name of the test type.",
            "nullable": true
          },
          "testTypeCode": {
            "type": "string",
            "description": "Gets or sets the code for the test type.",
            "nullable": true
          },
          "testCenterSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the test center.",
            "nullable": true
          },
          "testCenterName": {
            "type": "string",
            "description": "Gets or sets the name of the test center.",
            "nullable": true
          },
          "testExaminerSsn": {
            "type": "string",
            "description": "Gets or sets the social security number of the test examiner.",
            "nullable": true
          },
          "testExaminerName": {
            "type": "string",
            "description": "Gets or sets the name of the test examiner.",
            "nullable": true
          },
          "hasPassed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the test has been passed or failed."
          },
          "createdOn": {
            "type": "string",
            "description": "Gets or sets the date when the test was registered (yyyy-MM-dd).",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the test registration.",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "description": "Gets or sets how many points the student got in the test.",
            "format": "int32"
          },
          "scorePart1": {
            "type": "integer",
            "description": "Gets or sets how many points the student got from part 1 (only applies to written tests).",
            "format": "int32",
            "nullable": true
          },
          "scorePart2": {
            "type": "integer",
            "description": "Gets or sets how many points the student got from part 2 (only applies to written tests).",
            "format": "int32",
            "nullable": true
          },
          "testFactorScores": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestFactorScoreOverview" },
            "description": "Gets or sets the list of TestFactorScores",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a test result for a student's driving license exam."
      },
      "TestResultCreateRequestBody": {
        "required": [
          "bookId",
          "createdOn",
          "hasPassed",
          "testCenterSsn",
          "testExaminerSsn",
          "testTypeId"
        ],
        "type": "object",
        "properties": {
          "bookId": {
            "minLength": 1,
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "Gets or sets the unique id for the digital driving license book.",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "testTypeId": {
            "type": "integer",
            "description": "Gets or sets the type of test (1, 2, 3).",
            "format": "int32",
            "example": 1
          },
          "createdOn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the date the test was created.",
            "format": "date-time",
            "example": "YYYY-MM-dd"
          },
          "testCenterSsn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the test center's social security number.",
            "example": "0000000000"
          },
          "testExaminerSsn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the test examiner's social security number.",
            "example": "0000000000"
          },
          "hasPassed": {
            "type": "boolean",
            "description": "Gets or sets whether the test has been passed or failed.",
            "example": true
          },
          "score": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets how many points the student got.",
            "format": "int32",
            "example": 100
          },
          "scorePart1": {
            "type": "integer",
            "description": "Gets or sets how many points the student got from part 1 (only applies to written test).",
            "format": "int32",
            "nullable": true,
            "example": 45
          },
          "scorePart2": {
            "type": "integer",
            "description": "Gets or sets how many points the student got from part 2 (only applies to written test).",
            "format": "int32",
            "nullable": true,
            "example": 45
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the registration.",
            "nullable": true,
            "example": "Texti með athugasemd"
          },
          "testFactorScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestScoreCreateRequestBody"
            },
            "description": "Gets or sets the list of TestFactorScores",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for creating a test result."
      },
      "TestResultCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TestResultCreateResponseData",
            "description": "Gets or sets the data for the test result creation response.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for creating a test result."
      },
      "TestResultCreateResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the unique id for the test result.",
            "nullable": true,
            "example": "11111111-1111-1111-1111-111111111111"
          }
        },
        "additionalProperties": false,
        "description": "Represents the data for the test result creation response."
      },
      "TestResultGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestResult" },
            "description": "Gets or sets the list of test results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for fetching test results."
      },
      "TestResultType": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "integer",
            "description": "Gets or sets the type ID of the test (1, 2, 3).",
            "format": "int32"
          },
          "typeName": {
            "type": "string",
            "description": "Gets or sets the name of the test type.",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "description": "Gets or sets the short code for the test type.",
            "nullable": true
          },
          "licenseCategory": {
            "type": "string",
            "description": "Gets or sets the license category that support the test type.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the type of a driving license test."
      },
      "TestResultUpdateRequestBody": {
        "required": ["createdOn", "hasPassed"],
        "type": "object",
        "properties": {
          "hasPassed": {
            "type": "boolean",
            "description": "Gets or sets whether the test has been passed or failed.",
            "example": true
          },
          "createdOn": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the date when the test result was registered (yyyy-MM-dd).",
            "format": "date-time",
            "example": "2020-01-01"
          },
          "score": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets how many points the student got in the test.",
            "format": "int32",
            "example": 100
          },
          "scorePart1": {
            "type": "integer",
            "description": "Gets or sets how many points the student got from part 1 (only applies to written tests).",
            "format": "int32",
            "nullable": true,
            "example": 45
          },
          "scorePart2": {
            "type": "integer",
            "description": "Gets or sets how many points the student got from part 2 (only applies to written tests).",
            "format": "int32",
            "nullable": true,
            "example": 45
          },
          "comments": {
            "type": "string",
            "description": "Gets or sets comments about the registration.",
            "nullable": true,
            "example": "Texti með athugasemd"
          },
          "testFactorScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestScoreCreateRequestBody"
            },
            "description": "Gets or sets the list of TestFactorScores",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body for updating test results."
      },
      "TestScoreCreateRequestBody": {
        "required": ["testFactorScoreId"],
        "type": "object",
        "properties": {
          "testFactorScoreId": {
            "minLength": 1,
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "description": "Gets or sets the ID of the test factor score."
          },
          "comment": {
            "type": "string",
            "description": "Gets or sets the comment associated with the test score.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base class representing a test score."
      },
      "TestTypeGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestResultType" },
            "description": "Gets or sets the list of test result types.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for fetching test result types."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter 'Bearer' [space] and then your valid token in the text input below.\r\n\r\nExample: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [{ "Bearer": [] }]
}
